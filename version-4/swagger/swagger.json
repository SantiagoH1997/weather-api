{
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "schemes": [
    "http"
  ],
  "swagger": "2.0",
  "info": {
    "description": "API to request weather reports",
    "title": "Weather API.",
    "license": {
      "name": "MIT",
      "url": "http://opensource.org/licenses/MIT"
    },
    "version": "1.0.0"
  },
  "host": "localhost:8080",
  "basePath": "/",
  "paths": {
    "/scheduler/weather": {
      "put": {
        "description": "Schedules a job to be performed every 1 hour",
        "tags": [
          "job"
        ],
        "operationId": "scheduleJob",
        "parameters": [
          {
            "example": "Bogotá",
            "x-go-name": "City",
            "description": "City name",
            "name": "city",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "example": "CO",
            "x-go-name": "Country",
            "description": "Country name\nTwo letter country code",
            "name": "country",
            "in": "body",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "202": {
            "$ref": "#/responses/jobScheduledResponse"
          },
          "401": {
            "$ref": "#/responses/badRequestError"
          }
        }
      }
    },
    "/weather": {
      "get": {
        "description": "Returns a weather report given a city and a country",
        "tags": [
          "weather"
        ],
        "operationId": "getWeather",
        "parameters": [
          {
            "type": "string",
            "example": "Bogotá",
            "x-go-name": "City",
            "description": "City name",
            "name": "city",
            "in": "path",
            "required": true
          },
          {
            "type": "string",
            "example": "CO",
            "x-go-name": "Country",
            "description": "Two letter country code",
            "name": "country",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/responses/weather"
          },
          "401": {
            "$ref": "#/responses/badRequestError"
          },
          "404": {
            "$ref": "#/responses/notFoundError"
          }
        }
      }
    }
  },
  "responses": {
    "badRequestError": {
      "description": "badRequestError",
      "headers": {
        "message": {
          "type": "string",
          "description": "A list of missing fields"
        },
        "status_code": {
          "type": "integer",
          "format": "int64",
          "description": "400"
        }
      }
    },
    "jobScheduledResponse": {
      "description": "jobScheduledResponse",
      "headers": {
        "message": {
          "type": "string",
          "description": "\"Job scheduled\""
        },
        "status_code": {
          "type": "integer",
          "format": "int64",
          "description": "202"
        }
      }
    },
    "notFoundError": {
      "description": "notFoundError",
      "headers": {
        "message": {
          "type": "string",
          "description": "City not found"
        },
        "status_code": {
          "type": "integer",
          "format": "int64",
          "description": "404"
        }
      }
    },
    "weather": {
      "description": "Weather is the response for GET /weather",
      "headers": {
        "cloudiness": {
          "type": "string"
        },
        "geo_coordinates": {
          "type": "array",
          "items": {
            "type": "number",
            "format": "float"
          }
        },
        "humidity": {
          "type": "string"
        },
        "location_name": {
          "type": "string"
        },
        "pressure": {
          "type": "string"
        },
        "requested_time": {
          "type": "string"
        },
        "sunrise": {
          "type": "string"
        },
        "sunset": {
          "type": "string"
        },
        "temperature": {
          "type": "string"
        },
        "wind": {
          "type": "string"
        }
      }
    }
  }
}